{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\learnjs\\\\reactaxiosapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport ReactPractice from './Components/ReactPractice';\nimport axios from 'axios';\nimport './App.css';\nimport './index.css';\nimport { getValue } from '@testing-library/user-event/dist/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState([]);\n  useEffect(() => {\n    // fetchDataByAxios(); \n    fetchDataByFetch();\n  }, []);\n\n  const fetchDataByAxios = async () => {\n    let response = await axios.get(\"https://api.github.com/users\");\n    console.log(response.data);\n    setUser(response.data);\n  };\n\n  const fetchDataByFetch = async () => {\n    let response = await fetch(\"https://api.github.com/users\");\n    let res = response.json();\n    console.log(res);\n    setUser(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user.map(value => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: value.avatar_url\n      }, value.node_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g26Pb/ecDi+x6k07CsgfguRqPQQ=\");\n\n_c = App;\nexport default App; // Multiple Ways of Async Await Fetch API Call With Hooks (useState, useEffect) & Map | React JS\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","ReactPractice","axios","getValue","App","user","setUser","fetchDataByFetch","fetchDataByAxios","response","get","console","log","data","fetch","res","json","map","value","avatar_url","node_id"],"sources":["C:/xampp/htdocs/learnjs/reactaxiosapp/src/App.js"],"sourcesContent":["import React, {useState,useEffect}from 'react';\nimport logo from './logo.svg';\nimport ReactPractice from './Components/ReactPractice';\nimport  axios  from 'axios';\nimport './App.css';\nimport './index.css';\nimport { getValue } from '@testing-library/user-event/dist/utils';\n\nfunction App() {\n\n  const[user, setUser] = useState([]); \n  useEffect(() => { \n    // fetchDataByAxios(); \n    fetchDataByFetch();\n  },[]);\n\n  const fetchDataByAxios = async() => {\n    let response = await axios.get(\"https://api.github.com/users\");\n    console.log(response.data);\n    setUser(response.data);\n  };\n\n  const fetchDataByFetch = async() => {\n    let response = await fetch(\"https://api.github.com/users\");\n\n    let res = response.json();\n    console.log(res);\n    setUser(res);\n  };\n  return (\n    <div>\n      {/* <ReactPractice /> */}\n     \n        {\n         user.map((value)=>{\n          return (\n            <img key={value.node_id} src={value.avatar_url} />\n          );\n         })\n         \n         }\n\n      \n      \n    </div>\n  );\n}\nexport default App;\n\n// Multiple Ways of Async Await Fetch API Call With Hooks (useState, useEffect) & Map | React JS\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAQC,KAAR,MAAoB,OAApB;AACA,OAAO,WAAP;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,wCAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAA/B;EACAC,SAAS,CAAC,MAAM;IACd;IACAQ,gBAAgB;EACjB,CAHQ,EAGP,EAHO,CAAT;;EAKA,MAAMC,gBAAgB,GAAG,YAAW;IAClC,IAAIC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,8BAAV,CAArB;IACAC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;IACAP,OAAO,CAACG,QAAQ,CAACI,IAAV,CAAP;EACD,CAJD;;EAMA,MAAMN,gBAAgB,GAAG,YAAW;IAClC,IAAIE,QAAQ,GAAG,MAAMK,KAAK,CAAC,8BAAD,CAA1B;IAEA,IAAIC,GAAG,GAAGN,QAAQ,CAACO,IAAT,EAAV;IACAL,OAAO,CAACC,GAAR,CAAYG,GAAZ;IACAT,OAAO,CAACS,GAAD,CAAP;EACD,CAND;;EAOA,oBACE;IAAA,UAIKV,IAAI,CAACY,GAAL,CAAUC,KAAD,IAAS;MACjB,oBACE;QAAyB,GAAG,EAAEA,KAAK,CAACC;MAApC,GAAUD,KAAK,CAACE,OAAhB;QAAA;QAAA;QAAA;MAAA,QADF;IAGA,CAJD;EAJL;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAtCQhB,G;;KAAAA,G;AAuCT,eAAeA,GAAf,C,CAEA"},"metadata":{},"sourceType":"module"}